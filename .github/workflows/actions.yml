name: designer_server

on:
  push:
    branches:
      - 'actions'

jobs:
  test-lint:
    name: BUILD, UNIT TEST, GENERATE COVERAGE HTML, PUSH TO DOCKER HUB
    runs-on: ubuntu-20.04
    steps:
      #      - name: Check Docker Images
      #        run: |
      #          docker images
      #          docker image ls

      - name: Checkout
        uses: actions/checkout@v2

      #      - name: Set up Docker Buildx
      #        uses: docker/setup-buildx-action@v1

      - name: Show Files
        run: ls -al
      #       - name: Pull
      #         run: docker-compose pull

#      - name: Docker Prune Images
#        run: docker image prune -f

      - name: Docker Compose Up
        run: docker compose -f ./docker-compose.app.dev.yml up -d --build

      - name: Check Docker Images
        run: |
          docker images
          docker image ls

      - name: Wait for PostgreSQL
        run: docker-compose -f ./docker-compose.app.dev.yml exec -it designer_backend ./designer_backend/backend_server/wait_for_it.sh postgresql:5432 --timeout=180

      - name: Container Inspections
        run: docker-compose -f ./docker-compose.app.dev.yml ps

      - name: Check Container designer_backend Logs
        run: docker-compose -f ./docker-compose.app.dev.yml logs designer_backend

      - name: Check Container postgresql Logs
        run: docker-compose -f ./docker-compose.app.dev.yml logs postgresql

      - name: Container IP Address designer_backend
        run: docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' designer_backend

      - name: Container IP Address postgresql
        run: docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' postgres

      - name: Check Ownership and Permissions
        run: ls -ld ./postgresql/data

      - name: Set Ownership and Permissions
        run: sudo chown -R postgres:postgres ./postgresql
          && sudo chmod -R 700 ./postgresql

      - name: Perform Unit Test
        run: docker compose -f ./docker-compose.app.dev.yml exec designer_backend coverage run manage.py test

      - name: Run Test Coverage
        run: docker compose -f ./docker-compose.app.dev.yml exec designer_backend coverage report

      - name: Generate Coverage Result Html
        run: docker compose -f ./docker-compose.app.dev.yml exec designer_backend coverage html

      - name: Check Html Coverage Result
        run: ls -al ./designer_backend/backend_server/htmlcov

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      #        run : docker login docker.io -u ${{ secrets.DOCKERHUB_USER }} -p ${{ secrets.DOCKERHUB_TOKEN }}

      #      - name: Docker Images Build and push
      #        uses: docker/build-push-action@v2
      #        with:
      #          context: .
      #          push: true
      #          tags: ${{ secrets.DOCKERHUB_USER }}/dev:1.0

      - name: Tag to Docker nginx Image
        run: docker tag nginx:1.25.1 ${{ secrets.DOCKERHUB_USER }}/${{ secrets.DOCKERHUB_REPOSITORY }}:nginx_1_25_1__1.0

      - name: Tag to Docker redis Image
        run: docker tag redis:7.0.5-alpine ${{ secrets.DOCKERHUB_USER }}/${{ secrets.DOCKERHUB_REPOSITORY }}:redis_7_0_5_alpine__1.0

      - name: Tag to Docker postgresql Image
        run: docker tag postgres:15 ${{ secrets.DOCKERHUB_USER }}/${{ secrets.DOCKERHUB_REPOSITORY }}:postgresql_15__1.0

      - name: Tag to Docker designer_backend Image
        run: |
          IMAGE_ID=$(docker images -q designer_backend:1.0)
          echo $IMAGE_ID
          docker tag $IMAGE_ID ${{ secrets.DOCKERHUB_USER }}/${{ secrets.DOCKERHUB_REPOSITORY }}:designer_backend__1.0

      - name: Docker Push
        run: |
          docker push ${{ secrets.DOCKERHUB_USER }}/${{ secrets.DOCKERHUB_REPOSITORY }}:nginx_1_25_1__1.0
          docker push ${{ secrets.DOCKERHUB_USER }}/${{ secrets.DOCKERHUB_REPOSITORY }}:redis_7_0_5_alpine__1.0
          docker push ${{ secrets.DOCKERHUB_USER }}/${{ secrets.DOCKERHUB_REPOSITORY }}:postgresql_15__1.0
          docker push ${{ secrets.DOCKERHUB_USER }}/${{ secrets.DOCKERHUB_REPOSITORY }}:designer_backend__1.0

      # https://stackoverflow.com/questions/75837306/github-actions-sending-artifacts-by-email
      - name: Send email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{secrets.GOOGLE_ACCOUNT}}
          password: ${{secrets.GOOGLE_PW}}
          subject: "CI/CD Results For Softstone Desiner Server"
          from: SoftStoneIncDev
          body: |
            Hi,
            Softstoneinc 'Designer Server' actions has completed.
            DESIGNER SEVER 테스트, 도커 이미지 PUSH 가 완료 되었습니다.
            Regards,
            gh.jung
          to: gh.jung@softstoneinc.com #, sj.lim@softstoneinc.com
          attachments: |
            ./designer_backend/backend_server/htmlcov/index.html

      - name: Docker Hub Log out
        run: docker logout
