name: designer_server

on:
  push:
    branches:
      - 'actions'

jobs:
  test-lint:
    name: BUILD, UNIT TEST, GENERATE COVERAGE HTML, PUSH TO DOCKER HUB
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Show Files
        run: ls -al
#       - name: Pull
#         run: docker-compose pull
      - name: Docker Compose Up
        run: docker compose -f ./docker-compose.dev.yml up -d --build

      - name: Perform Unit Test
        run : docker compose -f ./docker-compose.dev.yml exec designer_backend coverage run manage.py test

      - name: Run Test Coverage
        run : docker compose -f ./docker-compose.dev.yml exec designer_backend coverage report

      - name: Generate Coverage Result Html
        run : docker compose -f ./docker-compose.dev.yml exec designer_backend coverage html

      - name: Check Html Coverage Result
        run : ls -al ./designer_backend/backend_server/htmlcov

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Tag to Docker nginx Image
        run: docker tag nginx:1.25.1 ${{ secrets.DOCKERHUB_USER }}/nginx_1_25_1:1.0

      - name: Tag to Docker redis Image
        run: docker tag redis:7.0.5-alpine ${{ secrets.DOCKERHUB_USER }}/redis_7_0_5_alpine:1.0

      - name: Tag to Docker postgresql Image
        run: docker tag postgres:15 ${{ secrets.DOCKERHUB_USER }}/postgresql_15:1.0

      - name: Tag to Docker designer_backend Image
        run: |
          IMAGE_ID=$(docker images -q designer_backend:1.0)
          echo $IMAGE_ID
          docker tag $IMAGE_ID ${{ secrets.DOCKERHUB_USER }}/designer_backend:1.0

      - name: Docker Compose Push
        run: docker compose -f ./docker-compose.dev.yml push

      - name: Docker Hub Log out
        run: docker logout